// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApp.Infrastructure.Data;

#nullable disable

namespace TodoApp.Infrastructure.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    partial class TodoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TodoApp.Core.Entities.General.ToDo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ToDo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c2196e4-9d06-4574-a212-d4bdef0a4bfa"),
                            CreationDate = new DateTime(2023, 10, 10, 12, 56, 40, 625, DateTimeKind.Utc).AddTicks(4552),
                            Title = "Milk",
                            UserId = new Guid("7c2196e4-9d06-4574-a212-d4bdef0a4bfb")
                        },
                        new
                        {
                            Id = new Guid("8c2196e4-9d06-4574-a212-d4bdef0a4bfb"),
                            CreationDate = new DateTime(2023, 10, 10, 12, 56, 40, 625, DateTimeKind.Utc).AddTicks(4559),
                            Title = "Dog food",
                            UserId = new Guid("7c2196e4-9d06-4574-a212-d4bdef0a4bfb")
                        },
                        new
                        {
                            Id = new Guid("8c2196e4-9d06-4574-a212-d4bdef0a4bfc"),
                            CreationDate = new DateTime(2023, 10, 10, 12, 56, 40, 625, DateTimeKind.Utc).AddTicks(4561),
                            Title = "Kubernetes",
                            UserId = new Guid("7c2196e4-9d06-4574-a212-d4bdef0a4bfc")
                        },
                        new
                        {
                            Id = new Guid("8c2196e4-9d06-4574-a212-d4bdef0a4bfd"),
                            CreationDate = new DateTime(2023, 10, 10, 12, 56, 40, 625, DateTimeKind.Utc).AddTicks(4563),
                            Title = "New Relic",
                            UserId = new Guid("7c2196e4-9d06-4574-a212-d4bdef0a4bfc")
                        },
                        new
                        {
                            Id = new Guid("8c2196e4-9d06-4574-a212-d4bdef0a4bfe"),
                            CreationDate = new DateTime(2023, 10, 10, 12, 56, 40, 625, DateTimeKind.Utc).AddTicks(4565),
                            Title = "Azure Databases",
                            UserId = new Guid("7c2196e4-9d06-4574-a212-d4bdef0a4bfc")
                        });
                });

            modelBuilder.Entity("TodoApp.Core.Entities.General.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7c2196e4-9d06-4574-a212-d4bdef0a4bfb"),
                            CreateDate = new DateTime(2023, 10, 10, 12, 56, 40, 625, DateTimeKind.Utc).AddTicks(7941),
                            Name = "user01",
                            Password = "user01"
                        },
                        new
                        {
                            Id = new Guid("7c2196e4-9d06-4574-a212-d4bdef0a4bfc"),
                            CreateDate = new DateTime(2023, 10, 10, 12, 56, 40, 625, DateTimeKind.Utc).AddTicks(7949),
                            Name = "user02",
                            Password = "user02"
                        });
                });

            modelBuilder.Entity("TodoApp.Core.Entities.General.ToDo", b =>
                {
                    b.HasOne("TodoApp.Core.Entities.General.User", "User")
                        .WithMany("ToDos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TodoApp.Core.Entities.General.User", b =>
                {
                    b.Navigation("ToDos");
                });
#pragma warning restore 612, 618
        }
    }
}
